# 应用服务 WEB 访问端口
server:
  port: 8123
  servlet:
    context-path: /api
spring:
  # 空间图片分表
  shardingsphere:
    datasource:
      names: mapl_picture
      mapl_picture:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/mapl_picture
        username: root
        password: 040414@ghw
    rules:
      sharding:
        tables:
          picture:
            actual-data-nodes: mapl_picture.picture  # 动态分表
            table-strategy:
              standard:
                sharding-column: spaceId
                sharding-algorithm-name: picture_sharding_algorithm  # 使用自定义分片算法
        sharding-algorithms:
          picture_sharding_algorithm:
            type: CLASS_BASED
            props:
              strategy: standard
              algorithmClassName: com.ghw.maplpicturebackend.manage.sharding.PictureShardingAlgorithm
    props:
      sql-show: true
  redis:
    port: 6379
    host: 127.0.0.1
    timeout: 5000
    database: 0
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 20MB
  application:
    name: mapl-picture-backend
    # 数据库
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/mapl_picture
    username: root
    password: 040414@ghw
mybatis-plus:
  configuration:
    # MyBatis 配置
    map-underscore-to-camel-case: false
    # 开发时打印日志
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  # 逻辑删除
  global-config:
    db-config:
      logic-delete-field: deleted
      logic-not-delete-value: 0
      logic-delete-value: 1
    enable-sql-runner: true
# 接口文档
knife4j:
  enable: true
  openapi:
    title: 接口文档
    version: 1.0
    group:
      default:
        api-rule: package
        api-rule-resources:
          - com.ghw.maplpicturebackend.controller

# 对象存储配置
cos:
  client:
    host: 
    secretId: 
    secretKey: 
    region: 
    bucket: 

# 阿里云 AI 配置
aliYunAi:
  apiKey: 



